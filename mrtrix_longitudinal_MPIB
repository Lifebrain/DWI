cat >preamble <<EOF

#!/bin/bash

SING="singularity exec $HOME/containers/FSL_ANTS_MRTRIX.6.0.2_2.2.0_3.0RC3.sif"
EOF

. ./preamble

for parm in AKTIV????? ; do

	cat preamble - >dwi2response.job <<EOF

	# create tissue type segmentation --> could also base this on freesurfer parcellation image
	$SING 5ttgen fsl $parm/MPrage/s${parm}*.nii $parm/MPrage/5tt.mif -nocrop

	# coregister T1 to DWI via flirt
	$SING fslmaths ${parm}/hifi_b0.nii.gz -Tmean ${parm}/hifi_b0_mean.nii.gz
	$SING flirt -in $parm/MPrage/s${parm}*.nii -ref $parm/hifi_b0_mean.nii.gz -cost mutualinfo -dof 6 -omat $parm/MPrage/${parm}_struct2dwi.mat -out $parm/MPrage/${parm}_r2dwi.nii.gz

	# convert matrix to mrtrix-format
	$SING transformconvert $parm/MPrage/${parm}_struct2dwi.mat $parm/MPrage/s${parm}*.nii $parm/hifi_b0_mean.nii.gz flirt_import $parm/MPrage/${parm}_struct2dwi_mrtrix.txt

	# apply matrix
	$SING mrtransform $parm/MPrage/5tt.mif -linear $parm/MPrage/${parm}_struct2dwi_mrtrix.txt -interp nearest $parm/MPrage/5tt_r2dwi.mif

	# create a GM/WM Boundary seed mask to define plausible streamline starting
	$SING 5tt2gmwmi $parm/MPrage/5tt_r2dwi.mif  $parm/MPrage/gmwmSeed_r2dwi.mif

	# Calculate tissue response functions UPDATED APRIL 2019
	$SING dwi2response dhollander $parm/${parm}_preproc.nii.gz $parm/response_wm.txt $parm/response_gm.txt $parm/response_csf.txt -voxels $parm/voxels.nii.gz -nthreads 4 -mask $parm/brain_mask.nii.gz -fslgrad $parm/${parm}_preproc.bvec $parm/${parm}_preproc.bval

	# Calculate the diffusion tensor to extract md and fa 
	$SING dwi2tensor $parm/${parm}_preproc.nii.gz -mask $parm/brain_mask.nii.gz -fslgrad $parm/${parm}_preproc.bvec $parm/${parm}_preproc.bval $parm/${parm}_tensor.mif

	# Extract md and fa 
	$SING tensor2metric $parm/${parm}_tensor.mif -mask $parm/brain_mask.nii.gz -adc $parm/${parm}_md.nii.gz -fa $parm/${parm}_fa.nii.gz
	
	# transform fa and md images to MNI space based on transformation from DTIfit (FSL_FDT)
#	$SING applywarp --ref=../FSL_FDT/FSL_HCP1065_FA_1mm.nii.gz --in=$parm/${parm}_fa.nii.gz --warp=../FSL_FDT/$parm/${parm}_diff2standard.nii.gz --out=$parm/${parm}_fa_2_HCP1065.nii.gz
#	$SING applywarp --ref=../FSL_FDT/FSL_HCP1065_FA_1mm.nii.gz --in=$parm/${parm}_md.nii.gz --warp=../FSL_FDT/$parm/${parm}_diff2standard.nii.gz --out=$parm/${parm}_md_2_HCP1065.nii.gz
	
EOF
	TMPID=$(qsub dwi2response.job -l nodes=1:ppn=4 -d. -j oe -o $HOME/logs/ -N "mrtrix_dwi2response_${parm}")
	BARRIER1=$BARRIER1":"$TMPID
done
echo $BARRIER1

## NEEDS TO INCLUDE ALL SUBJECTS, CANNOT BE DONE IN PARALLEL

cat preamble - >average_response.job <<EOF
# To ensure the response function is representative of your study population, a group average response function must be computed (cp. http://community.mrtrix.org/t/response-function-for-group-analysis/1077)
$SING average_response AKTIV*/response_wm.txt group_average_response_wm.txt
$SING average_response AKTIV*/response_gm.txt group_average_response_gm.txt
$SING average_response AKTIV*/response_csf.txt group_average_response_csf.txt
EOF
BARRIER2=$(qsub average_response.job -d. -j oe -o $HOME/logs/ -N "mrtrix_averesp" -W depend=afterok$BARRIER1)
echo $BARRIER2

# Two participants (AKTIV2124B AKTIV4223B) have incomplete data for timepoint A but they should still be included, that is why they are explicitly mentioned
for parm in AKTIV????A  AKTIV2124B AKTIV4223B; do

	dir=$(echo $parm | cut -c 1-9);
	
	cat preamble >tmp2.job 

	# we only want intra-subject template generation for participants with multiple timepoints so we pick them based on whether they have a second time point. 
	if [ -d "${dir}B" ] || [ -d "${dir}C" ]; then
	
	   mkdir -p $dir/fod_input
	   mkdir -p $dir/mask_input

	   for tp in A B C ; do
	   
	      if [ -d "${dir}${tp}" ]; then

	         cat >>tmp2.job <<EOF

		     # upsample DW images to increase anatomical contrast and improve downstream spatial normalisation and statistics
		     $SING mrresize ${dir}${tp}/${dir}${tp}_preproc.nii.gz -vox 1.3 -nthreads 4 ${dir}${tp}/${dir}${tp}_preproc_upsampled.nii.gz
		     # upsample the mask image (we use the one created via bet and checked already!!)
		     $SING mrresize ${dir}${tp}/brain_mask.nii.gz -vox 1.3 -interp nearest ${dir}${tp}/${dir}${tp}_mask_upsampled.mif

		     # Calculate fod's (CSD) 
		     $SING dwi2fod msmt_csd ${dir}${tp}/${dir}${tp}_preproc_upsampled.nii.gz group_average_response_wm.txt ${dir}${tp}/wmfod.mif group_average_response_gm.txt ${dir}${tp}/gm.mif group_average_response_csf.txt ${dir}${tp}/csf.mif -mask ${dir}${tp}/${dir}${tp}_mask_upsampled.mif -fslgrad ${dir}${tp}/${dir}${tp}_preproc.bvec ${dir}${tp}/${dir}${tp}_preproc.bval

		     # Intensity normalisation to correct for global intensity differences between subjects
		     $SING mtnormalise ${dir}${tp}/wmfod.mif ${dir}${tp}/wmfod_norm.mif ${dir}${tp}/gm.mif ${dir}${tp}/gm_norm.mif ${dir}${tp}/csf.mif ${dir}${tp}/csf_norm.mif -mask ${dir}${tp}/${dir}${tp}_mask_upsampled.mif                                                                                                                                                                                                                                                                     

		     # symbolic link FOD images (and masks) from one subject into a single input folder
		     ln -sr ${dir}${tp}/wmfod_norm.mif $dir/fod_input/${dir}${tp}.mif ; ln -sr ${dir}${tp}/${dir}${tp}_mask_upsampled.mif $dir/mask_input/${dir}${tp}.mif

EOF
	      else echo "Timepoint ${tp} does not exist for ${dir}."
	      fi
	   done

	   cat >>tmp2.job <<EOF

	   # build the intra-subject template 
	   $SING population_template $dir/fod_input -mask_dir $dir/mask_input $dir/${dir}_wmfod_template.mif -voxel_size 1.3 -type rigid -nthreads 4 
EOF

	   for tp in A B C ; do

	      if [ -d "${dir}${tp}" ]; then

		     cat >>tmp2.job <<EOF

		     # Register the FOD image from all time points to the FOD intra-template image
		     $SING mrregister ${dir}${tp}/wmfod_norm.mif -mask1 ${dir}${tp}/${dir}${tp}_mask_upsampled.mif $dir/${dir}_wmfod_template.mif -type rigid -rigid $dir${tp}/${dir}${tp}2intra_warp.mif # -nl_warp $dir${tp}/${dir}${tp}2intra_warp.mif $dir${tp}/intra2${dir}${tp}_warp.mif

		     # compute the mask intersection across time points to perform analyses in voxels that contain data from all subjects
		     $SING mrtransform ${dir}${tp}/${dir}${tp}_mask_upsampled.mif -linear ${dir}${tp}/${dir}${tp}2intra_warp.mif -interp nearest ${dir}${tp}/${dir}${tp}_mask_in_intratemplate_space.mif -template $dir/${dir}_wmfod_template.mif # -warp ${dir}${tp}/${dir}${tp}2intra_warp.mif 

EOF
	      fi
	   done

	   cat >>tmp2.job <<EOF
	   $SING mrmath $dir?/${dir}?_mask_in_intratemplate_space.mif min $dir/${dir}_mask_intersection.mif
EOF

	# for those subjects with only one timepoint (A) we still calculate the FODs
	else
	   cat >>tmp2.job <<EOF

	   # upsample DW images to increase anatomical contrast and improve downstream spatial normalisation and statistics
	   $SING mrresize ${parm}/${parm}_preproc.nii.gz -vox 1.3 -nthreads 4 ${parm}/${parm}_preproc_upsampled.nii.gz
	   # upsample the mask image (we use the one created via bet and checked already!!)
	   $SING mrresize ${parm}/brain_mask.nii.gz -vox 1.3 -interp nearest ${parm}/${parm}_mask_upsampled.mif

	   # Calculate fod's (CSD) 
	   $SING dwi2fod msmt_csd ${parm}/${parm}_preproc_upsampled.nii.gz group_average_response_wm.txt ${parm}/wmfod.mif group_average_response_gm.txt ${parm}/gm.mif group_average_response_csf.txt ${parm}/csf.mif -mask ${parm}/${parm}_mask_upsampled.mif -fslgrad ${parm}/${parm}_preproc.bvec ${parm}/${parm}_preproc.bval

	   # Intensity normalisation to correct for global intensity differences between subjects
	   $SING mtnormalise ${parm}/wmfod.mif ${parm}/wmfod_norm.mif ${parm}/gm.mif ${parm}/gm_norm.mif ${parm}/csf.mif ${parm}/csf_norm.mif -mask ${parm}/${parm}_mask_upsampled.mif                                                                                                                                                                                                                                                                     
EOF
	fi
	TMPID=$(qsub tmp2.job -d. -j oe -o $HOME/logs/ -l mem=10gb,nodes=1:ppn=4 -N "mrtrix_intratempl_${parm}" -W depend=afterok:$BARRIER2)
	BARRIER3=$BARRIER3":"$TMPID
done
echo $BARRIER3


# CANNOT BE RUN IN PARALLEL
cat preamble - >template.job <<EOF
# Generate a study-specific unbiased FOD template
mkdir -p template/fod_input
mkdir -p template/mask_input
# 
# # according to documentation 30-40 subjects should suffice for the template. Here we randomly pick 10 subjects from each group (the intra-subject template)
# # and symbolic link all FOD images (and masks) into a single input folder
$SING foreach `ls -d AKTIV1??? | sort -R | tail -10 | tr '\n' ' '`: ln -sr PRE/PRE_wmfod_template.mif template/fod_input/PRE.mif ";" ln -sr PRE/PRE_mask_intersection.mif template/mask_input/PRE.mif
$SING foreach `ls -d AKTIV2??? | sort -R | tail -10 | tr '\n' ' '`: ln -sr PRE/PRE_wmfod_template.mif template/fod_input/PRE.mif ";" ln -sr PRE/PRE_mask_intersection.mif template/mask_input/PRE.mif
$SING foreach `ls -d AKTIV3??? | sort -R | tail -10 | tr '\n' ' '`: ln -sr PRE/PRE_wmfod_template.mif template/fod_input/PRE.mif ";" ln -sr PRE/PRE_mask_intersection.mif template/mask_input/PRE.mif
$SING foreach `ls -d AKTIV4??? | sort -R | tail -10 | tr '\n' ' '`: ln -sr PRE/PRE_wmfod_template.mif template/fod_input/PRE.mif ";" ln -sr PRE/PRE_mask_intersection.mif template/mask_input/PRE.mif

# build the inter-subject template
$SING population_template template/fod_input -mask_dir template/mask_input template/wmfod_template.mif -voxel_size 1.3 -nthreads 16
EOF
BARRIER4=$(qsub template.job -d. -j oe -o $HOME/logs/ -l mem=50gb,walltime=75:0:0,nodes=1:ppn=16 -N "mrtrix_template" -W depend=afterok$BARRIER3)
echo $BARRIER4

# CAN RUN IN PARALLEL
for parm in AKTIV???? ; do

    cat preamble - >FOD2template.job <<EOF

	# Register the FOD intra-subject template image from all subjects to the FOD group template image
	$SING mrregister $parm/${parm}_wmfod_template.mif -mask1 $parm/${parm}_mask_intersection.mif template/wmfod_template.mif -nthreads 4 -nl_warp $parm/${parm}2template_warp.mif $parm/template2${parm}_warp.mif

	# Register the intra-subject mask intersection from all subjects to the FOD group template image
	$SING mrtransform $parm/${parm}_mask_intersection.mif -warp $parm/${parm}2template_warp.mif -interp nearest -datatype bit -nthreads 4 $parm/${parm}_dwimask_in_template_space.mif
EOF

	for tp in A B C ; do

	   if [ -d "${parm}${tp}" ]; then

	      cat >>FOD2template.job <<EOF

	      # combine intra & inter-subject warps
	      $SING transformcompose ${parm}${tp}/${parm}${tp}2intra_warp.mif ${parm}/${parm}2template_warp.mif ${parm}${tp}/${parm}${tp}_combined_warp.mif

	      # warp FOD images into template space without FOD reorientation
	      $SING mrtransform ${parm}${tp}/wmfod_norm.mif -warp ${parm}${tp}/${parm}${tp}_combined_warp.mif -noreorientation ${parm}${tp}/fod_in_template_space.mif
	   
	      # warp the mask to the FOD group template image
	      $SING mrtransform ${parm}${tp}/${parm}${tp}_mask_upsampled.mif -warp ${parm}${tp}/${parm}${tp}_combined_warp.mif -interp nearest -datatype bit -nthreads 4 ${parm}${tp}/${parm}${tp}_dwimask_in_template_space.mif
EOF
       fi
    done
    TMPID=$(qsub FOD2template.job -l mem=50gb,nodes=1:ppn=4 -d. -j oe -o $HOME/logs/ -N "mrtrix_FOD2template_${parm}" -W depend=afterok:$BARRIER4)
    BARRIER5=$BARRIER5":"$TMPID
done
echo $BARRIER5

# for those subjects with only one timepoint (A) we register that timepoint to the template
for parm in AKTIV????A ; do

    dir=$(echo $parm | cut -c 1-9);

    # for those subjects with only one timepoint (A) we register that timepoint to the template
    if [ ! -d "${dir}B" ] && [ ! -d "${dir}C" ]; then

	   cat preamble - >FOD2template.job<<EOF

	   # Register the FOD image from subjects with only timepoint A to the FOD group template image
	   $SING mrregister ${parm}/wmfod_norm.mif -mask1 ${parm}/${parm}_mask_upsampled.mif template/wmfod_template.mif -nthreads 4 -nl_warp ${parm}/${parm}2template_warp.mif ${parm}/template2${parm}_warp.mif

	   # Register the mask from subjects with only timepoint A to the FOD group template image
	   $SING mrtransform ${parm}/${parm}_mask_upsampled.mif -warp ${parm}/${parm}2template_warp.mif -interp nearest -datatype bit -nthreads 4 ${parm}/${parm}_dwimask_in_template_space.mif

	   # warp the FOD image from subjects with only timepoint A to the FOD group template space without FOD reorientation
	   $SING mrtransform $parm/wmfod_norm.mif -warp $parm/${parm}2template_warp.mif -noreorientation $parm/fod_in_template_space.mif
EOF
       TMPID=$(qsub FOD2template.job -l mem=50gb,nodes=1:ppn=4 -d. -j oe -o $HOME/logs/ -N "mrtrix_FOD2template_${parm}" -W depend=afterok:$BARRIER4)
       BARRIER6=$BARRIER6":"$TMPID
    fi
done
echo $BARRIER6
	 


# CANNOT BE RUN IN PARALLEL
cat preamble - >template_mask.job <<EOF
# compute the mask intersection to perform analyses in voxels that contain data from all subjects
$SING mrmath AKTIV?????/AKTIV*_dwimask_in_template_space.mif min template/template_mask.mif -datatype bit

# identify all voxels having some white matter by thresholding the DC term
# ***** NOT DONE IN THE UPDATED VERSION, THEY USE THE TEMPLATE_MASK FROM NOW ON INSTEAD OF THE VOXEL MASK
$SING mrconvert template/wmfod_template.mif -coord 3 0 template/dc_term.mif
$SING mrthreshold template/dc_term.mif template/voxel_mask.mif

# OLD VERSION with voxel_mask: segment all fixels from each FOD in the template image --> CHECK SIZE OF IMAGE, NO MORE THAN 500.000 fixels (mrinfo -size template/fixel_mask/directions.mif)
# $SING fod2fixel -mask template/voxel_mask.mif -fmls_peak_value 0.06 -nthreads 4 template/wmfod_template.mif template/fixel_mask
# UPDATED OCT19 to template_mask: 
$SING fod2fixel -mask template/template_mask.mif -fmls_peak_value 0.06 -nthreads 4 template/wmfod_template.mif template/fixel_mask

EOF
BARRIER7=$(qsub template_mask.job -d. -j oe -o $HOME/logs/ -N "mrtrix_template_mask" -W depend=afterok$BARRIER5$BARRIER6)
echo $BARRIER7


mkdir -p template/log_fc
mkdir -p template/fdc

for parm in AKTIV????? ; do

	dir=$(echo $parm | cut -c 1-9);
	
	cat preamble - >subject2template.job <<EOF

	# OLD VERSION with voxel_mask: segment each FOD lobe to identify the number and orientation of fixels in each voxel and the apparent fibre density
	# $SING fod2fixel $parm/fod_in_template_space.mif -mask template/voxel_mask.mif $parm/fixel_in_template_space_NOT_REORIENTED -afd ${parm}_fd.mif
	# UPDATED OCT19 to template_mask: 
	# segment each FOD lobe to identify the number and orientation of fixels in each voxel and the apparent fibre density
	$SING fod2fixel $parm/fod_in_template_space.mif -mask template/template_mask.mif $parm/fixel_in_template_space_NOT_REORIENTED -afd ${parm}_fd.mif
EOF

    if [ -d "${dir}" ]; then
    
       cat >>subject2template.job <<EOF

	   # reorient the direction of all fixels based on the Jacobian matrix
	   $SING fixelreorient $parm/fixel_in_template_space_NOT_REORIENTED $parm/${parm}_combined_warp.mif $parm/fixel_in_template_space
EOF

    else 
   
       cat >>subject2template.job <<EOF

	   # reorient the direction of all fixels based on the Jacobian matrix
	   $SING fixelreorient $parm/fixel_in_template_space_NOT_REORIENTED $parm/${parm}2template_warp.mif $parm/fixel_in_template_space
EOF
    fi
    
    cat >>subject2template.job <<EOF

	# folders can be safely removed
	rm -rf $parm/fixel_in_template_space_NOT_REORIENTED

	# Assign subject fixels to template fixels
	$SING fixelcorrespondence $parm/fixel_in_template_space/${parm}_fd.mif template/fixel_mask template/fd ${parm}.mif
EOF

    if [ -d "${dir}" ]; then
    
       cat >>subject2template.job <<EOF

	   # compute fixel-based metric related to morphological differences in fibre cross-section
	   $SING warp2metric $parm/${parm}_combined_warp.mif -fc template/fixel_mask template/fc ${parm}.mif
EOF

    else 
   
       cat >>subject2template.job <<EOF

	   # compute fixel-based metric related to morphological differences in fibre cross-section
	   $SING warp2metric $parm/${parm}2template_warp.mif -fc template/fixel_mask template/fc ${parm}.mif
EOF

    fi 

    cat >>subject2template.job <<EOF

	# compute log(FC) for group statistical analysis of FC (recommended) 
	## SHOULD NOT BE REPEATED FOR EVERY SUBJECT!!!!
	cp -n template/fc/index.mif  template/log_fc
	cp -n template/fc/directions.mif template/log_fc
	$SING mrcalc template/fc/${parm}.mif -log template/log_fc/${parm}.mif

	# compute fibre density and fibre cross-section combined to account for changes to both within-voxel fibre density and macroscopic atrophy
	## SHOULD NOT BE REPEATED FOR EVERY SUBJECT!!!!
	cp -n template/fc/index.mif template/fdc
	cp -n template/fc/directions.mif template/fdc
	$SING mrcalc template/fd/${parm}.mif template/fc/${parm}.mif -mult template/fdc/${parm}.mif
EOF
	TMPID=$(qsub subject2template.job -l mem=20gb -d. -j oe -o $HOME/logs/ -N "mrtrix_subj2template_${parm}" -W depend=afterok:$BARRIER7)
	BARRIER8=$BARRIER8":"$TMPID
done
echo $BARRIER8


## remaining steps from here on are executed from the template directory
cat preamble - >tractogram.job <<EOF
# generate a whole-brain tractogram from the FOD template
cd template
# $SING tckgen -angle 22.5 -maxlen 250 -minlen 10 -power 1.0 wmfod_template.mif -seed_image voxel_mask.mif -mask voxel_mask.mif -select 20000000 tracks_20_million.tck -nthreads 16
# *******CHANGE IN THE NEWEST MRtrix VERSION TO template_mask and set cutoff option
$SING tckgen -angle 22.5 -maxlen 250 -minlen 10 -power 1.0 wmfod_template.mif -seed_image template_mask.mif -mask template_mask.mif -select 20000000 -cutoff 0.06 tracks_20_million.tck -nthreads 16

# for display pruposes create a subset of the tracks that can be inspected
$SING tckedit tracks_20_million.tck -number 200k smallerTracks_200k.tck

# reduce tractography biases in the whole-brain tractogram
$SING tcksift tracks_20_million.tck wmfod_template.mif tracks_2_million_sift.tck -term_number 2000000 -nthreads 16

# for display pruposes create a subset of the tracks that can be inspected
$SING tckedit tracks_2_million_sift.tck -number 200k smallerSIFT_200k.tck

# to sample from predefined ROIs, we want to be able to transform MNI based atlas regions into template/subject space  
$SING mrconvert wmfod_template.mif wmfod_template.nii.gz

# perform statistical analysis using connectivity-based fixel enhancement **** NOT YET SUITABLE FOR LONGITUDINAL DATA
# ****** 128GB of RAM is a typical memory requirement
# $SING fixelcfestats fd files.txt design_matrix.txt contrast_matrix.txt tracks_2_million_sift.tck stats_fd
# $SING fixelcfestats log_fc files.txt design_matrix.txt contrast_matrix.txt tracks_2_million_sift.tck stats_log_fc
# $SING fixelcfestats fdc files.txt design_matrix.txt contrast_matrix.txt tracks_2_million_sift.tck stats_fdc
# files.txt is a text file containing the filename of each file (i.e. not the full path) to be analysed inside the input fixel directory, each filename on a separate line. The line ordering should correspond to the lines in the file design_matrix.txt.
EOF
qsub tractogram.job -d. -j oe -o $HOME/logs/ -l mem=128gb,walltime=50:00:00,nodes=1:ppn=16 -N "mrtrix_tractogram" -W depend=afterok$BARRIER8
